name: e2e

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright (browsers & deps)
        run: npx playwright install --with-deps

      # ---- Run E2E (needs secrets) ----
      - name: Run tests
        env:
          # Use the hosted site, not localhost
          BASE_URL: https://qc.uapi.sa
          TEST_USERNAME: ${{ secrets.UAPIQC_USERNAME }}
          TEST_PASSWORD: ${{ secrets.UAPIQC_PASSWORD }}
        run: |
          echo "BASE_URL=$BASE_URL"
          if [ -z "$TEST_USERNAME" ] || [ -z "$TEST_PASSWORD" ]; then
            echo "❌ Missing TEST_USERNAME/TEST_PASSWORD secrets." >&2
            exit 1
          fi
          # Add 'github' reporter so results surface in the job summary
          npx playwright test --project=chromium --reporter=github,html

      # ---- Inline failure summary with screenshots/videos/traces ----
      - name: Summarize failures in GitHub Action summary
        if: failure() || always()
        run: |
          echo "## Playwright Failure Summary" >> "$GITHUB_STEP_SUMMARY"

          # Show failing screenshot thumbnails (limit to 10)
          screenshots=$(ls -1 test-results/**/test-failed-*.png 2>/dev/null | head -n 10 || true)
          if [ -n "$screenshots" ]; then
            echo "### Screenshots" >> "$GITHUB_STEP_SUMMARY"
            for f in $screenshots; do
              # Markdown image paths are uploaded automatically to the summary
              echo "" >> "$GITHUB_STEP_SUMMARY"
              echo "#### $(basename "$f")" >> "$GITHUB_STEP_SUMMARY"
              echo "![]($f)" >> "$GITHUB_STEP_SUMMARY"
            done
          else
            echo "- No failed screenshots found." >> "$GITHUB_STEP_SUMMARY"
          fi

          # Link to videos (limit to 6)
          videos=$(ls -1 test-results/**/video.webm 2>/dev/null | head -n 6 || true)
          if [ -n "$videos" ]; then
            echo "" >> "$GITHUB_STEP_SUMMARY"
            echo "### Videos" >> "$GITHUB_STEP_SUMMARY"
            for v in $videos; do
              echo "- [$(basename "$v")]($v)" >> "$GITHUB_STEP_SUMMARY"
            done
          fi

          # Link to traces (limit to 6)
          traces=$(ls -1 test-results/**/*.zip 2>/dev/null | head -n 6 || true)
          if [ -n "$traces" ]; then
            echo "" >> "$GITHUB_STEP_SUMMARY"
            echo "### Traces" >> "$GITHUB_STEP_SUMMARY"
            for t in $traces; do
              echo "- [$(basename "$t")]($t)" >> "$GITHUB_STEP_SUMMARY"
            done
          fi

      # ---- Upload full HTML report as an artifact ----
      - name: Upload HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: ignore
          retention-days: 7
